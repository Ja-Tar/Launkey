name: CI
on:
  workflow_dispatch:
  release:
    types: [created]

permissions:
  contents: write

env:
  FORCE_COLOR: "1"

defaults:
  run:
    shell: bash

jobs:
  update-version:
    name: Update Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Update Version
        env:
          NEW_VERSION: ${{ github.event.release.tag_name }}
        run: |
          python .github/workflows/updateversion.py
      
      - name: Git Auto Commit
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          commit_message: "chore: update version to ${{ github.event.release.tag_name }}"
          file_pattern: "launkey/pyproject.toml"
          branch: main
          commit_author: GitHub Actions <actions@github.com>

  ci:
    needs: update-version
    name: Test and Package
    runs-on: ${{ matrix.runs-on }}
    defaults:
      run:
        working-directory: ./launkey
    strategy:
      fail-fast: false
      matrix:
        target: [ "Windows", "Ubuntu-24.04", "Fedora-40"]
        include:
          - target: "Windows"
            output-format: "app"
            runs-on: "windows-latest"

          - target: "Ubuntu-24.04"
            platform: "Linux"
            output-format: "system"
            runs-on: "ubuntu-latest"
            pre-command: "sudo apt -y install socat"
            briefcase-run-prefix: "xvfb-run"
            briefcase-args: "--target ubuntu:24.04"

          - target: "Fedora-40"
            platform: "Linux"
            output-format: "system"
            runs-on: "ubuntu-latest"
            pre-command: "sudo apt -y install socat"
            briefcase-run-prefix: "xvfb-run"
            briefcase-args: "--target fedora:40"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13.3"  # update with your targeted Python version

      - name: Cache Briefcase Linux
        if: matrix.target != 'Windows'
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip

      - name: Install Briefcase
        run: |
          python -m pip install -U pip setuptools wheel
          python -m pip install briefcase

      - name: Setup Environment
        run: |
          # Use GitHub's preinstalled JDK 17 for Android builds
          # echo JAVA_HOME="${JAVA_HOME_17_X64:-$JAVA_HOME_17_arm64}" | tee -a ${GITHUB_ENV}
          ${{ matrix.pre-command }}

      - name: Build App
        run: |
          ${{ matrix.briefcase-build-prefix }} briefcase build ${{ matrix.platform || matrix.target }} ${{ matrix.output-format }} --test --no-input --log ${{ matrix.briefcase-args }} ${{ matrix.briefcase-build-args }}

      - name: Test App
        run: |
          ${{ matrix.briefcase-run-prefix }} briefcase run ${{ matrix.platform || matrix.target }} ${{ matrix.output-format }} --test --no-input --log ${{ matrix.briefcase-args }} ${{ matrix.briefcase-run-args }}

      - name: Package App
        run: |
          ${{ matrix.briefcase-package-prefix }} briefcase package ${{ matrix.platform || matrix.target }} ${{ matrix.output-format }} --update --adhoc-sign --no-input --log ${{ matrix.briefcase-args }} ${{ matrix.briefcase-package-args }}

      - name: Upload App
        uses: actions/upload-artifact@v4
        with:
          name: App-${{ matrix.target }}
          path: launkey/dist
          if-no-files-found: error

      - name: Upload Log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: Log-Failure-${{ matrix.target }}
          path: logs/*
    
      - name: Upload Assets to Release
        if: github.event_name == 'release' && github.event.action == 'created'
        uses: svenstaro/upload-release-action@v2
        with:
          file: launkey/dist/*
          file_glob: true
          repo_token: ${{ secrets.GITHUB_TOKEN }}
